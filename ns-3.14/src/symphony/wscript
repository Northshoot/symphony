# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-
from proxy_generator import *
# def options(opt):
#     pass

def configure(conf):
     conf.check_nonfatal(header_name='XMLValidator.hpp', define_name='HAVE_XERCES_H')
     conf.env['xercersc'] = conf.check(mandatory=True, lib='xerces-c', uselib_store='XERCES')
     conf.env['ldl'] = conf.check(mandatory=True, lib='dl', uselib_store='LDL')
     

def generate():
	 Ns3ToTosProxyGenerator("build/symphony.xml")

def build(bld):
    generate()
    module = bld.create_ns3_module('symphony', ['core','wifi','mobility','internet','emu','applications'])
    module.env.append_value("LINKFLAGS",['-lxerces-c','-L/home/lauril/dev/symphony/elf'])
    module.use.append("XERCES")
    module.use.append("LDL")
    module.source = [
                      'model/tos-to-ns3-proxy.cc',
            		  'model/ns3-to-tos-proxy_auto.cc',
            		  'model/tos-node-list.cc',
            		  'model/tos-mac-low.cc',
            		  'model/tos-net-device.cc',
                      'model/symphony-application.cc',
            		  'helper/tos-node-container.cc',
            		  'helper/tos-helper.cc',
            		  'helper/yans-tos-helper.cc',
            		  'helper/tos-net-device-container.cc',
            		  'helper/tos-mobility-helper.cc',
                      'helper/symphony-xml.cc',
                      'helper/symphony-sensor-container.cc',
        		      'model/tos-node.cc',
                      'model/simu-clock.cc',
                      'model/RF230-radio-model.cc',
                      'model/tos-radio-model.cc',
                      'model/model-vocabulary.cc',
                      'model/model-element.cc',
                      'model/hardware-model.cc',
                      'model/gateway-client.cc',
                      'model/raw-sensor.cc',
        ]

    module_test = bld.create_ns3_module_test_library('symphony')
    module_test.source = [
        'test/symphony-test-suite.cc',
        ]

    headers = bld.new_task_gen(features=['ns3header'])
    headers.module = 'symphony'
    headers.source = [
		            'model/calls-to-ns3.h',
                    'model/tos-to-ns3-proxy.h',
    		        'model/tos-node.h',
    		        'model/simu-clock.h',
        			'model/ns3-to-tos-proxy_auto.h',
        			'model/tos-packet.h',
        			'model/gateway.h',
        			'model/ns3includes.h',
        			'model/tos-mac-low.h',
        			'helper/tos-node-container.h',
                    'helper/symphony-sensor-container.h',
        			'model/tos-node-list.h',
        			'model/tos-net-device.h',
        			'helper/tos-helper.h',
        			'helper/yans-tos-helper.h',
        			'helper/tos-net-device-container.h',
        			'helper/tos-mobility-helper.h',
                    'helper/symphony-xml.h',
                    'model/RF230-radio-model.h',
                    'model/tos-radio-model.h',
                    'model/model-vocabulary.h',
                    'model/model-element.h',
                    'model/hardware-model.h',
                    'model/gateway-client.h',
                    '../wifi/model/wifi-mac-trailer.h',
                    'model/raw-sensor.h',
                    'model/symphony-application.h',
        ]

    #if bld.env.ENABLE_EXAMPLES:
    bld.add_subdirs('examples')

    # bld.ns3_python_bindings()

